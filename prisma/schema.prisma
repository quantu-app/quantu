// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//===========================
// USERS 
//===========================
model User {
  @@map("users")
  id Int @id @default(autoincrement())

  // attributes
  username          String  @unique
  encryptedPassword String
  active            Boolean @default(true)
  confirmed         Boolean @default(false)
  creator           Boolean @default(false)
  confirmedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  emails              Email[]
  oldPasswords        OldPasswords[]
  applicationSettings ApplicationSettings?
}

model Email {
  @@map("emails")
  id Int @id @default(autoincrement())

  // attributes
  email     String
  primary   Boolean @default(false)
  confirmed Boolean @default(false)
  confirmedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  user   User @relation(fields: [userId], references: [id])
  userId Int

  // indices
  @@unique([userId, email])
}

model OldPasswords {
  @@map("old_passwords")
  id Int @id @default(autoincrement())

  // attributes
  encryptedPassword String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  user   User @relation(fields: [userId], references: [id])
  userId Int

  // indices
  @@unique([userId, encryptedPassword])
}

model ApplicationSettings {
  @@map("application_settings")
  id Int @id @default(autoincrement())

  // attributes
  locale String @default("en")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  // indices
  @@unique([userId, id])
}